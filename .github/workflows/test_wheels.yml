name: Test Wheels

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: "Package name on PyPI."
        required: true
        type: string
      version:
        description: "Package version to test."
        required: true
        type: string

jobs:
  test-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            arch: amd64
          - os: macos-latest
            arch: arm64
          - os: ubuntu-latest
            arch: amd64
          - os: ubuntu-latest
            arch: arm64
          - os: windows-latest
            arch: amd64

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Create and activate a virtual environment
        if: matrix.os != 'windows-latest'
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Create and activate a virtual environment
        if: matrix.os == 'windows-latest'
        run: |
          python -m venv venv
          venv\Scripts\activate

      - name: Install package from Test PyPI
        run: |
          pip install --index-url https://test.pypi.org/simple/ ${{ inputs.package_name }}==${{ inputs.version }}

      - name: Test binary through python
        run: |
          python -m mybin --help

      - name: Test binary directly
        if: matrix.os != 'windows-latest'
        run: |
          which mybin
          mybin --help

      - name: Test binary directly
        if: matrix.os == 'windows-latest'
        run: |
          where mybin
          mybin.exe --help
